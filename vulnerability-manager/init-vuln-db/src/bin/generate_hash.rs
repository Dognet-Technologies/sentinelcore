use argon2::{
    password_hash::{rand_core::OsRng, PasswordHasher, SaltString},
    Argon2,
};

fn main() {
    let password = "admin123";
    
    // Usa esattamente lo stesso codice del tuo hash_password
    let salt = SaltString::generate(&mut OsRng);
    let argon2 = Argon2::default();
    
    let hash = argon2
        .hash_password(password.as_bytes(), &salt)
        .expect("Failed to hash password")
        .to_string();
    
    println!("Password: {}", password);
    println!("Hash: {}", hash);
    println!("Hash length: {}", hash.len());
    
    // Verifica immediata
    use argon2::{PasswordHash, PasswordVerifier};
    let parsed_hash = PasswordHash::new(&hash).unwrap();
    let is_valid = Argon2::default()
        .verify_password(password.as_bytes(), &parsed_hash)
        .is_ok();
    
    println!("Verification: {}", is_valid);
}
