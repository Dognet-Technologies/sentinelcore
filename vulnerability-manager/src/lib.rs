// src/lib.rs - FIXED: Aggiunto AppState qui per evitare import circolari

use axum::extract::FromRef;
use sqlx::PgPool;
use std::sync::Arc;

pub mod auth;
pub mod config;
pub mod models;
pub mod handlers;
pub mod api;
pub mod plugins;

// Shared application state - MOVED HERE to avoid circular imports
#[derive(Clone)]
pub struct AppState {
    pub pool: Arc<PgPool>,
    pub auth: Arc<auth::Auth>,
}

// Implement FromRef per permettere l'estrazione di singoli state
impl FromRef<AppState> for Arc<PgPool> {
    fn from_ref(state: &AppState) -> Self {
        state.pool.clone()
    }
}

impl FromRef<AppState> for Arc<auth::Auth> {
    fn from_ref(state: &AppState) -> Self {
        state.auth.clone()
    }
}

// Re-export dei tipi principali se necessario
pub use auth::Auth;
pub use models::Role;
pub use config::{AuthConfig, PasswordPolicyConfig};
pub use config::{Config, load_config};