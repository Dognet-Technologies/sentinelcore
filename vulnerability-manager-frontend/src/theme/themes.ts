// src/theme/themes.ts
import { createTheme, ThemeOptions, alpha } from '@mui/material/styles';
import type {} from '@mui/x-data-grid/themeAugmentation';

// Colori comuni per severity e status
const commonColors = {
  severity: {
    critical: '#dc2626',
    high: '#ea580c',
    medium: '#f59e0b',
    low: '#84cc16',
    info: '#06b6d4',
  },
  status: {
    open: '#ef4444',
    inProgress: '#f59e0b',
    resolved: '#10b981',
    closed: '#6b7280',
  },
  chart: {
    primary: ['#60a5fa', '#93bbfc', '#2563eb', '#1e40af', '#1e3a8a'],
    secondary: ['#a78bfa', '#c4b5fd', '#7c3aed', '#6d28d9', '#5b21b6'],
    mixed: ['#60a5fa', '#a78bfa', '#34d399', '#fbbf24', '#f87171'],
  },
};

// Ombre comuni
const commonShadows = {
  card: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
  cardHover: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
  button: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
  buttonHover: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
  drawer: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
  appBar: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',
};

// Estendi il tema con colori custom
declare module '@mui/material/styles' {
  interface Theme {
    severity: typeof commonColors.severity;
    status: typeof commonColors.status;
    chart: typeof commonColors.chart;
    customShadows: typeof commonShadows;
  }
  interface ThemeOptions {
    severity?: typeof commonColors.severity;
    status?: typeof commonColors.status;
    chart?: typeof commonColors.chart;
    customShadows?: typeof commonShadows;
  }
}

// Palette e tipografia comuni
const typography = {
  fontFamily: [
    'Inter',
    '-apple-system',
    'BlinkMacSystemFont',
    '"Segoe UI"',
    'Roboto',
    '"Helvetica Neue"',
    'Arial',
    'sans-serif',
  ].join(','),
  h1: { 
    fontWeight: 700,
    fontSize: '2.5rem',
    lineHeight: 1.2,
  },
  h2: { 
    fontWeight: 700,
    fontSize: '2rem',
    lineHeight: 1.3,
  },
  h3: { 
    fontWeight: 600,
    fontSize: '1.75rem',
    lineHeight: 1.4,
  },
  h4: { 
    fontWeight: 600,
    fontSize: '1.5rem',
    lineHeight: 1.4,
  },
  h5: { 
    fontWeight: 600,
    fontSize: '1.25rem',
    lineHeight: 1.5,
  },
  h6: { 
    fontWeight: 600,
    fontSize: '1.125rem',
    lineHeight: 1.5,
  },
  body1: {
    fontSize: '1rem',
    lineHeight: 1.6,
  },
  body2: {
    fontSize: '0.875rem',
    lineHeight: 1.6,
  },
  button: { 
    textTransform: 'none' as const,
    fontWeight: 500,
  },
  caption: {
    fontSize: '0.75rem',
    lineHeight: 1.5,
  },
  overline: {
    fontSize: '0.75rem',
    fontWeight: 600,
    letterSpacing: '0.08em',
    textTransform: 'uppercase' as const,
  },
};

const commonPalette = {
  error: {
    main: '#ef4444',
    light: '#f87171',
    dark: '#dc2626',
  },
  warning: {
    main: '#f59e0b',
    light: '#fbbf24',
    dark: '#d97706',
  },
  success: {
    main: '#10b981',
    light: '#34d399',
    dark: '#059669',
  },
  info: {
    main: '#3b82f6',
    light: '#60a5fa',
    dark: '#2563eb',
  },
};

// TEMA 1: Minimal Professional
const minimalThemeOptions: ThemeOptions = {
  palette: {
    mode: 'light',
    primary: {
      main: '#2563eb',
      light: '#3b82f6',
      dark: '#1d4ed8',
    },
    secondary: {
      main: '#7c3aed',
      light: '#8b5cf6',
      dark: '#6d28d9',
    },
    background: {
      default: '#f8fafc',
      paper: '#ffffff',
    },
    text: {
      primary: '#1e293b',
      secondary: '#64748b',
    },
    divider: '#e2e8f0',
    ...commonPalette,
  },
  typography,
  shape: {
    borderRadius: 12,
  },
  severity: commonColors.severity,
  status: commonColors.status,
  chart: commonColors.chart,
  customShadows: commonShadows,
};

export const minimalTheme = createTheme(minimalThemeOptions);

// TEMA 2: Modern Tech (Glassmorphism)
const modernTechShadows = {
  card: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',
  cardHover: '0 8px 32px 0 rgba(31, 38, 135, 0.5)',
  button: '0 4px 12px 0 rgba(31, 38, 135, 0.2)',
  buttonHover: '0 6px 20px 0 rgba(31, 38, 135, 0.4)',
  drawer: '0 10px 40px 0 rgba(31, 38, 135, 0.7)',
  appBar: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',
};

const modernTechThemeOptions: ThemeOptions = {
  palette: {
    mode: 'dark',
    primary: {
      main: '#00bfff',
      light: '#33ccff',
      dark: '#0099cc',
    },
    secondary: {
      main: '#a855f7',
      light: '#c084fc',
      dark: '#7c3aed',
    },
    background: {
      default: '#1a1a2e', // Colore solido invece di gradiente
      paper: 'rgba(255, 255, 255, 0.1)',
    },
    text: {
      primary: '#ffffff',
      secondary: 'rgba(255, 255, 255, 0.7)',
    },
    divider: 'rgba(255, 255, 255, 0.12)',
    ...commonPalette,
  },
  typography: {
    ...typography,
    fontFamily: '"Space Grotesk", "Inter", sans-serif',
  },
  shape: {
    borderRadius: 16,
  },
  severity: commonColors.severity,
  status: commonColors.status,
  chart: commonColors.chart,
  customShadows: modernTechShadows,
  components: {
    MuiCssBaseline: {
      styleOverrides: {
        body: {
          backgroundImage: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          backgroundAttachment: 'fixed',
        },
      },
    },
    MuiPaper: {
      styleOverrides: {
        root: {
          backgroundImage: 'none',
          backgroundColor: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(20px)',
          border: '1px solid rgba(255, 255, 255, 0.18)',
        },
      },
    },
    MuiButton: {
      styleOverrides: {
        root: {
          backdropFilter: 'blur(10px)',
          backgroundColor: 'rgba(255, 255, 255, 0.1)',
          border: '1px solid rgba(255, 255, 255, 0.18)',
          '&:hover': {
            backgroundColor: 'rgba(255, 255, 255, 0.2)',
          },
        },
      },
    },
  },
};

export const modernTechTheme = createTheme(modernTechThemeOptions);

// TEMA 3: Cyberpunk
const cyberpunkShadows = {
  card: '0 0 20px #00ff00',
  cardHover: '0 0 40px #00ff00',
  button: '0 0 10px #00ff00',
  buttonHover: '0 0 20px #00ff00',
  drawer: '0 0 50px #00ff00',
  appBar: '0 0 30px #00ff00',
};

const cyberpunkThemeOptions: ThemeOptions = {
  palette: {
    mode: 'dark',
    primary: {
      main: '#00ff00',
      light: '#33ff33',
      dark: '#00cc00',
    },
    secondary: {
      main: '#ff2a68',
      light: '#ff5588',
      dark: '#cc2255',
    },
    background: {
      default: '#0a0a0a',
      paper: '#1a1a2e',
    },
    text: {
      primary: '#00ff00',
      secondary: '#ffffff',
    },
    divider: '#00ff00',
    ...commonPalette,
  },
  typography: {
    ...typography,
    fontFamily: '"Orbitron", "Roboto Mono", monospace',
    h1: { fontWeight: 900, fontSize: '3rem' },
    h2: { fontWeight: 900, fontSize: '2.5rem' },
    h3: { fontWeight: 700, fontSize: '2rem' },
    body1: { fontFamily: '"Roboto Mono", monospace' },
    body2: { fontFamily: '"Roboto Mono", monospace' },
  },
  shape: {
    borderRadius: 0,
  },
  severity: commonColors.severity,
  status: commonColors.status,
  chart: commonColors.chart,
  customShadows: cyberpunkShadows,
  components: {
    MuiPaper: {
      styleOverrides: {
        root: {
          border: '1px solid #00ff00',
          '&:hover': {
            boxShadow: '0 0 15px #00ff00',
          },
        },
      },
    },
    MuiTextField: {
      styleOverrides: {
        root: {
          '& .MuiOutlinedInput-root': {
            '& fieldset': {
              borderColor: 'rgba(0, 255, 0, 0.3)',
            },
            '&:hover fieldset': {
              borderColor: '#00ff00',
            },
            '&.Mui-focused fieldset': {
              borderColor: '#00ff00',
              boxShadow: '0 0 10px rgba(0, 255, 0, 0.5)',
            },
          },
        },
      },
    },
  },
};

export const cyberpunkTheme = createTheme(cyberpunkThemeOptions);

// TEMA 4: Enterprise/Corporate
const enterpriseShadows = {
  card: '0 2px 4px rgba(0, 0, 0, 0.1)',
  cardHover: '0 4px 8px rgba(0, 0, 0, 0.15)',
  button: '0 1px 3px rgba(0, 0, 0, 0.08)',
  buttonHover: '0 2px 4px rgba(0, 0, 0, 0.1)',
  drawer: '0 8px 16px rgba(0, 0, 0, 0.15)',
  appBar: '0 4px 8px rgba(0, 0, 0, 0.1)',
};

const enterpriseThemeOptions: ThemeOptions = {
  palette: {
    mode: 'light',
    primary: {
      main: '#1565c0',
      light: '#1976d2',
      dark: '#0d47a1',
    },
    secondary: {
      main: '#424242',
      light: '#616161',
      dark: '#212121',
    },
    background: {
      default: '#fafafa',
      paper: '#ffffff',
    },
    text: {
      primary: '#212121',
      secondary: '#616161',
    },
    divider: 'rgba(0, 0, 0, 0.08)',
    ...commonPalette,
  },
  typography: {
    ...typography,
    fontFamily: '"IBM Plex Sans", "Helvetica Neue", "Arial", sans-serif',
  },
  shape: {
    borderRadius: 4,
  },
  severity: commonColors.severity,
  status: commonColors.status,
  chart: commonColors.chart,
  customShadows: enterpriseShadows,
  components: {
    MuiCssBaseline: {
      styleOverrides: {
        body: {
          scrollbarColor: '#bdbdbd #f5f5f5',
          '&::-webkit-scrollbar, & *::-webkit-scrollbar': {
            width: '8px',
            height: '8px',
          },
          '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {
            borderRadius: '0px',
            backgroundColor: '#bdbdbd',
            '&:hover': {
              backgroundColor: '#9e9e9e',
            },
          },
          '&::-webkit-scrollbar-track, & *::-webkit-scrollbar-track': {
            backgroundColor: '#f5f5f5',
          },
        },
      },
    },
    MuiCard: {
      styleOverrides: {
        root: {
          boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)',
          transition: 'box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
          '&:hover': {
            boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',
          },
        },
      },
    },
    MuiButton: {
      styleOverrides: {
        root: {
          textTransform: 'none',
          fontWeight: 500,
          boxShadow: 'none',
          borderRadius: '4px',
          padding: '8px 16px',
        },
        contained: {
          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
          '&:hover': {
            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.15)',
          },
        },
      },
    },
  },
};

export const enterpriseTheme = createTheme(enterpriseThemeOptions);

// Tipo per i nomi dei temi
export type ThemeName = 'minimal' | 'modernTech' | 'cyberpunk' | 'enterprise';

// Export themes object
export const themes = {
  minimal: minimalTheme,
  modernTech: modernTechTheme,
  cyberpunk: cyberpunkTheme,
  enterprise: enterpriseTheme,
};

// Export themeMetadata
export const themeMetadata = {
  minimal: {
    name: 'Minimal Professional',
    description: 'Tema minimalista e professionale',
    primary: '#2563eb',
    secondary: '#7c3aed',
  },
  modernTech: {
    name: 'Modern Tech',
    description: 'Tema futuristico con effetti glassmorphism',
    primary: '#00bfff',
    secondary: '#a855f7',
  },
  cyberpunk: {
    name: 'Cyberpunk',
    description: 'Tema cyberpunk con effetti neon',
    primary: '#00ff00',
    secondary: '#ff2a68',
  },
  enterprise: {
    name: 'Enterprise',
    description: 'Tema corporate professionale',
    primary: '#1565c0',
    secondary: '#424242',
  },
};