import apiClient from './client';
import { Vulnerability, VulnerabilityFilter } from '../types';

export const vulnerabilitiesApi = {
  list: async (filters?: VulnerabilityFilter): Promise<Vulnerability[]> => {
    const response = await apiClient.get('/api/vulnerabilities', { params: filters });
    return response.data;
  },

  get: async (id: string): Promise<Vulnerability> => {
    const response = await apiClient.get(`/api/vulnerabilities/${id}`);
    return response.data;
  },

  create: async (data: Partial<Vulnerability>): Promise<Vulnerability> => {
    const response = await apiClient.post('/api/vulnerabilities', data);
    return response.data;
  },

  update: async (id: string, data: Partial<Vulnerability>): Promise<Vulnerability> => {
    const response = await apiClient.put(`/api/vulnerabilities/${id}`, data);
    return response.data;
  },

  delete: async (id: string): Promise<void> => {
    await apiClient.delete(`/api/vulnerabilities/${id}`);
  },

  assignToTeam: async (vulnerabilityId: string, teamId: string): Promise<void> => {
    await apiClient.post(`/api/vulnerabilities/${vulnerabilityId}/assign`, { team_id: teamId });
  },
};