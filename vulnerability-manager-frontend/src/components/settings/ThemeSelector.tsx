// src/components/settings/ThemeSelector.tsx
import React from 'react';
import {
  Box,
  Card,
  CardContent,
  Typography,
  Radio,
  RadioGroup,
  FormControlLabel,
  FormControl,
  Fade,
  alpha,
} from '@mui/material';
import { useEnhancedTheme } from '../../contexts/EnhancedThemeContext';
import { themeMetadata } from '../../theme/themes';

export const ThemeSelector: React.FC = () => {
  const { currentTheme, setTheme } = useEnhancedTheme();

  const handleThemeChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setTheme(event.target.value as any);
  };

  return (
    <FormControl component="fieldset">
      <Typography variant="h6" gutterBottom>
        Seleziona Tema
      </Typography>
      <RadioGroup
        value={currentTheme}
        onChange={handleThemeChange}
        sx={{ gap: 2 }}
      >
        {Object.entries(themeMetadata).map(([key, metadata]) => (
          <Fade in key={key} timeout={300}>
            <Card
              sx={{
                border: currentTheme === key ? 2 : 1,
                borderColor: currentTheme === key ? 'primary.main' : 'divider',
                transition: 'all 0.3s ease',
                transform: currentTheme === key ? 'scale(1.02)' : 'scale(1)',
                '&:hover': {
                  borderColor: 'primary.main',
                  transform: 'scale(1.01)',
                },
              }}
            >
              <CardContent>
                <FormControlLabel
                  value={key}
                  control={<Radio />}
                  label={
                    <Box sx={{ ml: 1, flex: 1 }}>
                      <Typography variant="h6" gutterBottom>
                        {metadata.name}
                      </Typography>
                      <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                        {metadata.description}
                      </Typography>
                      {/* Theme Preview */}
                      <ThemePreview themeName={key} metadata={metadata} />
                    </Box>
                  }
                  sx={{ m: 0, width: '100%', alignItems: 'flex-start' }}
                />
              </CardContent>
            </Card>
          </Fade>
        ))}
      </RadioGroup>
    </FormControl>
  );
};

interface ThemePreviewProps {
  themeName: string;
  metadata: {
    name: string;
    description: string;
    primary: string;
    secondary: string;
  };
}

const ThemePreview: React.FC<ThemePreviewProps> = ({ themeName, metadata }) => {
  // Definire i colori di preview basati sul tema
  const getPreviewColors = () => {
    switch (themeName) {
      case 'minimal':
        return {
          background: '#f8fafc',
          surface: '#ffffff',
          text: '#1e293b',
        };
      case 'modernTech':
        return {
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          surface: 'rgba(255, 255, 255, 0.1)',
          text: '#ffffff',
        };
      case 'cyberpunk':
        return {
          background: '#0a0a0a',
          surface: '#1a1a2e',
          text: '#00ff00',
        };
      case 'enterprise':
        return {
          background: '#fafafa',
          surface: '#ffffff',
          text: '#212121',
        };
      default:
        return {
          background: '#f5f5f5',
          surface: '#ffffff',
          text: '#000000',
        };
    }
  };

  const colors = getPreviewColors();

  return (
    <Box
      sx={{
        width: '100%',
        height: 150,
        position: 'relative',
        background: colors.background,
        overflow: 'hidden',
        borderRadius: 1,
        border: '1px solid',
        borderColor: 'divider',
      }}
    >
      {/* Decorative elements for specific themes */}
      {themeName === 'modernTech' && (
        <>
          <Box
            sx={{
              position: 'absolute',
              top: -50,
              right: -50,
              width: 150,
              height: 150,
              borderRadius: '50%',
              background: `radial-gradient(circle, ${alpha(metadata.primary, 0.3)}, transparent)`,
            }}
          />
          <Box
            sx={{
              position: 'absolute',
              bottom: -30,
              left: -30,
              width: 100,
              height: 100,
              borderRadius: '50%',
              background: `radial-gradient(circle, ${alpha(metadata.secondary, 0.3)}, transparent)`,
            }}
          />
        </>
      )}

      {themeName === 'cyberpunk' && (
        <Box
          sx={{
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            height: '100%',
            background: `repeating-linear-gradient(
              0deg,
              transparent,
              transparent 2px,
              ${alpha(metadata.primary, 0.1)} 2px,
              ${alpha(metadata.primary, 0.1)} 4px
            )`,
          }}
        />
      )}

      {/* App bar preview */}
      <Box
        sx={{
          height: 40,
          background: alpha(colors.surface, themeName === 'modernTech' ? 0.8 : 0.9),
          borderBottom: `1px solid ${alpha(metadata.primary, 0.2)}`,
          display: 'flex',
          alignItems: 'center',
          px: 2,
          backdropFilter: themeName === 'modernTech' ? 'blur(10px)' : 'none',
        }}
      >
        <Box
          sx={{
            width: 24,
            height: 24,
            borderRadius: '50%',
            background: `linear-gradient(135deg, ${metadata.primary}, ${metadata.secondary})`,
            mr: 2,
            boxShadow: themeName === 'cyberpunk' 
              ? `0 0 10px ${metadata.primary}`
              : 'none',
          }}
        />
        <Box sx={{ flex: 1 }}>
          <Box
            sx={{
              width: 100,
              height: 6,
              borderRadius: 3,
              background: alpha(metadata.primary, 0.4),
            }}
          />
        </Box>
      </Box>

      {/* Content preview */}
      <Box sx={{ p: 1.5 }}>
        <Box sx={{ display: 'flex', gap: 1 }}>
          {[1, 2, 3].map((i) => (
            <Box
              key={i}
              sx={{
                flex: 1,
                height: 50,
                borderRadius: 0.5,
                background: alpha(colors.surface, themeName === 'modernTech' ? 0.6 : 0.7),
                border: `1px solid ${alpha(metadata.primary, 0.1)}`,
                p: 1,
                backdropFilter: themeName === 'modernTech' ? 'blur(5px)' : 'none',
                boxShadow: themeName === 'cyberpunk' 
                  ? `0 0 5px ${alpha(metadata.primary, 0.3)}`
                  : 'none',
              }}
            >
              <Box
                sx={{
                  width: '60%',
                  height: 4,
                  borderRadius: 2,
                  background: metadata.primary,
                  mb: 0.5,
                  opacity: 0.8,
                }}
              />
              <Box
                sx={{
                  width: '100%',
                  height: 3,
                  borderRadius: 1.5,
                  background: alpha(metadata.primary, 0.3),
                }}
              />
            </Box>
          ))}
        </Box>
      </Box>
    </Box>
  );
};

export default ThemeSelector;